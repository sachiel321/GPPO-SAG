var1: &model_path 'default'  # defaut means rl_model under distar/bin/, you can specify other models with absolute path.
common:
  type: 'play'  # one of ["play", "sl", "rl"], used for identify them
agent:
  z_path: '7map_filter_spine.json'  # statistics Z file
  show_Z: True  # whether print statistics Z
  zero_z_exceed_loop: True  # set Z to 0 if game passes the game loop in Z
  extra_units: True  # selcet extra units if selected units exceed 64
  fake_reward_prob: 0.8  # probablity which set Z to 0
feature:
  zero_z_value: 1.  # value used for 0Z
  zergling_num: 8  # how many zerglings are allowed in Z
actor:
  job_type: 'eval_test'
  # one of ['train', 'eval', 'train_test', 'eval_test'], train used for RL, eval used for evaluation, '_test' indicates use only one environment without multiprocessing
  gpu_batch_inference: False  # whether to use gpu for batch inference
  env_num: 1  # enviroment number
  episode_num: 1  # episode number
  print_freq: 1000  # log frequency in actor log
  traj_len: 2  # trajectory length
  use_cuda: False  # whether to use gpu in 'train_test' or 'eval_test'
  fake_model: False # if True, skip model loading 
  player_ids: ['model1', 'model2']  # player ids used in RL
  agents: 
    model1: 'default'  # key is one of player_ids, value is agent name
    model2: 'default'  
  model_paths:
    model1: *model_path  # key is one of player_ids, value is model checkpoint path
    model2: *model_path
  teacher_player_ids: ['haha', 'haha']  # teacher player ids used in RL
  teacher_model_paths:  
    haha: 'haha.pth.tar'  # key is one of teacher player ids
env:
  map_name: 'random'  # one of ['KairosJunction', 'KingsCove', 'NewRepugnancy'], random mean a random map from these three
  player_ids: ['agent1', 'bot10']  # player ids shown in game and replay, bot0 - bot10 means built-in bots
  races: ['zerg', 'zerg']  # player races
  map_size_resolutions: [True, True] # if True, ignore minimap_resolutions
  minimap_resolutions: [[160, 152], [160, 152]]  # minimap feature resulution, used in interface option
  realtime: False  # whether to use realtime in game, set True when play with human
  replay_dir: '.'  # where to save replay, '.' means saved at current working directory
  game_steps_per_episode: 100000  # maximum length in one game, the game will end when it reaches the game step
  update_both_obs: False  # request opponent's observation in own observation
  version: '4.10.0'  # SC2 game version
